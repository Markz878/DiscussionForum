@page "/topic/{topicid:long}"
@rendermode RenderMode.InteractiveWebAssembly

 @if (_topic is not null)
 {
     <div class="center-container p-2 scroll-smooth">
         <div class="flex justify-between w-full">
             @if (_isEditingTitle)
             {
                 <EditForm Model="_editTitle" OnValidSubmit="SubmitTitleEdit" FormName="EditTitle" Enhance class="flex w-full">
                     <InputText @bind-Value="_editTitle.Title" class="grow form-input-small text-2xl font-bold bg-transparent" />
                     <button class="btn-small btn-primary mx-1" type="submit">Submit</button>
                     <button type="button" class="btn-small btn-secondary" @onclick="CancelTitleEdit">Cancel</button>
                 </EditForm>
             }
             else
             {
                 <h1 class="font-bold text-2xl">@_topic.Title</h1>
                 @if (CanUserEdit())
                 {
                     <div class="flex">
                         <button type="button" @onclick="StartTitleEdit">
                             <img src="icons/edit.svg" alt="Edit title" width="15" class="action-icon mx-1" />
                         </button>
                         <button type="button" @onclick="ShowDeleteTopicConfirm">
                             <img src="icons/delete.svg" alt="Delete topic" class="h-3 action-icon mx-1" />
                         </button>
                     </div>
                 }
             }
         </div>
         <div class="sm:flex justify-between items-center pb-1">
             <p>#@_topic.UserName</p>
             <p>
                 <img src="icons/comments.svg" alt="Messages"
                      class="inline h-5 mx-1 invert-[0.2] dark:invert" />@_topic.Messages.Count
             </p>
             <p class="text-sm">Created at @_topic.CreatedAt.LocalDateTime.ToString("dd/MM/yyyy HH:mm")</p>
         </div>

         <div class="h-[1px] w-full bg-gray-400" />
         <div class="mb-2" />
         @foreach (TopicMessage message in _topic.Messages)
         {
             <TopicMessageComponent Message="@message" CurrentUserInfo="@_userInfo" EditMessageHandler="@EditMessageHandler"
                                    DeleteMessageHandler="@ShowDeleteMessageConfirm" AddMessageLikeHandler="@AddMessageLikeHandler"
                                    DeleteMessageLikeHandler="@DeleteMessageLikeHandler" />
         }
          <AuthorizeView>
              <Authorized>
                  <div class="bg-gray-400 h-[1px] w-full my-2 mb-4" />
                  <AddTopicMessageComponent TopicId="@TopicId" AdditionalClasses="mx-auto mb-2 w-full" />
              </Authorized>
              <NotAuthorized>
                  <p>Log in to comment...</p>
              </NotAuthorized>
          </AuthorizeView>
     </div>
 }
 
<Modal @ref=modal Header="@modalHeader">
    @modalContent
</Modal>

@code {
    private RenderFragment ModalMessage() =>
    @<p class="p-4 font-bold">@modalMessage</p>;

    private RenderFragment ModalConfirm(Func<Task> action) =>
    @<div class="text-gray-800 bg-[#FEF9F3] dark:text-gray-200 dark:bg-gray-700">
        <p class="p-4 font-bold">@modalMessage</p>
        <form method="dialog" class="pl-4 pb-4">
            <button type="submit" class="btn btn-primary" @onclick=action>Confirm</button>
        </form>
    </div>;
}

